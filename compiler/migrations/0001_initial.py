# Generated by Django 4.2 on 2023-05-03 07:42

import compiler.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FileSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SectionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SectionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('filesystem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='compiler.filesystem')),
                ('available', models.BooleanField(default=True)),
                ('availabilityEditedDate', models.DateTimeField(auto_now_add=True)),
                ('editedDate', models.DateTimeField(auto_now_add=True)),
                ('fileContent', models.FileField(upload_to=compiler.models.upload_dir)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('compiler.filesystem',),
        ),
        migrations.CreateModel(
            name='FileSection',
            fields=[
                ('filesystem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='compiler.filesystem')),
                ('fileAttached', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compiler.file')),
                ('parentSection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compiler.filesection')),
            ],
            bases=('compiler.filesystem',),
        ),
        migrations.CreateModel(
            name='SectionStatusData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compiler.filesection')),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('filesystem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='compiler.filesystem')),
                ('available', models.BooleanField(default=True)),
                ('availabilityEditedDate', models.DateTimeField(auto_now_add=True)),
                ('editedDate', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parentFolder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compiler.folder')),
            ],
            options={
                'abstract': False,
            },
            bases=('compiler.filesystem',),
        ),
        migrations.AddField(
            model_name='file',
            name='parentFolder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compiler.folder'),
        ),
    ]
